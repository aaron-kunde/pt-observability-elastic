services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1-amd64
    environment:
      discovery.type: single-node
      xpack.security.enabled: false

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1-amd64
    ports:
      - 5601:5601
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: min-32-byte-long-NEW-encryption-key

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.1-amd64
    volumes:
      - app_logs:/var/log/app_logs
    command: |
     filebeat
     -e
     -E filebeat.inputs.0.type=filestream
     -E filebeat.inputs.0.enabled=true
     -E filebeat.inputs.0.paths=/var/log/app_logs/app1.log
     -E filebeat.inputs.0.paths=/var/log/app_logs/app2.log.json
     -E filebeat.inputs.0.parsers.0.ndjson.overwrite_keys=true
     -E filebeat.inputs.0.parsers.0.ndjson.add_error_key=true
     -E filebeat.inputs.0.parsers.0.ndjson.expand_keys=true

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.11.1-amd64
    command: |
      metricbeat
      -e

  kafka:
    image: docker.io/bitnami/kafka:3.5.1-debian-11-r74
    volumes:
      - kafka_data:/bitnami
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  akhq:
    image: docker.io/tchiotludo/akhq:0.24.0
    ports:
      - 8080:8080
    environment:
      AKHQ_CONFIGURATION: "akhq.connections.local.properties.bootstrap.servers: kafka:9092"

  app1:
    image: app1:latest
    ports:
      - 8081:8080
    build:
      context: ./apps/app1
    volumes:
      - app_logs:/var/log/app_logs
    environment:
      SPRING_APPLICATION_NAME: app1
      LOGGING_FILE_NAME: /var/log/app_logs/app1.log

  app2:
    image: app2:latest
    ports:
      - 8082:8080
    build:
      context: ./apps/app2
    volumes:
      - app_logs:/var/log/app_logs
    environment:
      SPRING_APPLICATION_NAME: app2
      LOGGING_FILE_NAME: /var/log/app_logs/app2.log

volumes:
  kafka_data:
    driver: local
  app_logs:
